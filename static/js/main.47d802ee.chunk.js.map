{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","constants/routes.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/PasswordChange/index.js","components/Home/index.js","components/Admin/index.js","components/Account/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","appId","measurementId","REACT_MEASUREMENT_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","HOME","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","ROUTES","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","PasswordForgetFormBase","PasswordForgetForm","SignInFormBase","className","SignInForm","SignInPage","class","PasswordChangeForm","AdminPage","PasswordChange","loading","on","snapshot","usersObject","val","usersList","Object","keys","map","key","off","UserList","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47d802ee.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_ID,\r\n  measurementId: process.env.REACT_MEASUREMENT_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","export const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const LANDING = '/';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","  \r\nimport React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          })\r\n          .then(() => {\r\n            this.setState({ ...INITIAL_STATE });\r\n            this.props.history.push(ROUTES.HOME);\r\n          })\r\n          .catch(error => {\r\n            this.setState({ error });\r\n          });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport './signInStyle.css';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1 className='sign-in'><i class=\"fas fa-tools\"></i> Site is currently under contruction... <i class=\"fas fa-tools\"></i></h1>\r\n    <h1 className='developer-title'>Developer Access Only... <i class=\"far fa-smile-beam\"></i></h1>\r\n    <SignInForm />\r\n    {/* <PasswordForgetLink />\r\n    <SignUpLink /> */}\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === '' || email === '';\r\n\r\n    return (\r\n      <form className='form-style' onSubmit={this.onSubmit}>\r\n        <input className='text'\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input className='text'\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In \r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst authCondition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(AccountPage);","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Route path=\"/\" exact component={SignInPage} />\r\n\r\n{/* \r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route\r\n        exact\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route exact path={ROUTES.HOME} component={HomePage} />\r\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} /> */}\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\n\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <Router>\r\n      <Switch>\r\n        <App />\r\n      </Switch>\r\n    </Router>\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}